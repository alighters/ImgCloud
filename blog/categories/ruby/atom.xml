<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | alighters]]></title>
  <link href="http://alighters.github.io/blog/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://alighters.github.io/blog/"/>
  <updated>2021-01-10T23:40:11+08:00</updated>
  <id>http://alighters.github.io/blog/</id>
  <author>
    <name><![CDATA[alighters]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby 代码重构]]></title>
    <link href="http://alighters.github.io/blog/blog/2016/09/26/ruby-code-refactor/"/>
    <updated>2016-09-26T07:59:00+08:00</updated>
    <id>http://alighters.github.io/blog/blog/2016/09/26/ruby-code-refactor</id>
    <content type="html"><![CDATA[<p>在《 Ruby 元编程》一书的第二章 <code>method</code> 中，通过一段代码的重构，来展示 Ruby 的特性，如何以很少的代码来达到我们最终的效果。</p>

<h2>示例 Demo</h2>

<p>源代码：data_source.rb，其通过传入工作站点的 id，用来获取工作站点信息，如下：</p>

<!-- more -->


<pre><code class="ruby">class DS
   def initialize # connect to data source...
   def get_mouse_info(workstation_id) # ...
   def get_mouse_price(workstation_id) # ...
   def get_keyboard_info(workstation_id) # ...
   def get_keyboard_price(workstation_id) # ...
   def get_cpu_info(workstation_id) # ...
   def get_cpu_price(workstation_id) # ...
   def get_display_info(workstation_id) # ...
   def get_display_price(workstation_id) # ...
   # ...and so on
end
</code></pre>

<p>调用代码如下：</p>

<pre><code class="ruby">ds = DS.new
ds.get_cpu_info(42) # =&gt; 2.16 Ghz
ds.get_cpu_price(42) # =&gt; 150
ds.get_mouse_info(42) # =&gt; Dual Optical
ds.get_mouse_price(42) # =&gt; 40
</code></pre>

<h2>重构</h2>

<p>可以看到在 <code>DS</code> 类中，有很多重复的信息。第一步，首先将其抽象成一个 Computer 的类：</p>

<pre><code class="ruby">class Computer

  def initialize(computer_id, data_source)
    @id = computer_id
    @data_source = data_source
  end

  def mouse
    info = @data_source.get_mouse_info(@id)
    price = @data_source.get_mouse_price(@id)
    result = "Mouse: #{info} ($#{price})"
    return "* #{result}" if price &gt;= 100
    result
  end

  def cpu
    info = @data_source.get_cpu_info(@id)
    price = @data_source.get_cpu_price(@id)
    result = "Cpu: #{info} ($#{price})"
    return "* #{result}" if price &gt;= 100
    result
  end

  def keyboard
    info = @data_source.get_keyboard_info(@id)
    price = @data_source.get_keyboard_price(@id)
    result = "Keyboard: #{info} ($#{price})"
    return "* #{result}" if price &gt;= 100
    result
  end
  # ...
end
</code></pre>

<p>但是，抽象成这个类中，可以看到方法中对 <code>data_source</code> 的使用还有点信息的冗余。这里可以对方法再以参数的形式调用，如下。</p>

<h2>1.使用 Object 类的 send 方法：</h2>

<pre><code class="ruby">class Computer
  def initialize(computer_id, data_source)
    @id = computer_id
    @data_source = data_source
  end
  def mouse
    component :mouse
  end
  def cpu
    component :cpu
  end
  def keyboard
    component :keyboard
  end
  def component(name)
    info = @data_source.send "get_#{name}_info", @id
    price = @data_source.send "get_#{name}_price", @id
    result = "#{name.to_s.capitalize}: #{info} ($#{price})"
    return "* #{result}" if price &gt;= 100
    result
  end
end
</code></pre>

<p><code>send</code> 方法的参数指定一个方法的名称和参数，这样对方法的调用就可以抽象在 <code>component</code> 方法中。
调用代码：</p>

<pre><code class="ruby">my_computer = Computer.new(42, DS.new)
my_computer.cpu # =&gt; * Cpu: 2.16 Ghz ($220)
</code></pre>

<blockquote><p>PS: 这种动态派发的这种特殊用法有时被称为**模式派发 （Pattern Dispatch），因为它基于方法名的某种模式来过滤方法。</p></blockquote>

<h2>2.方法 define_method</h2>

<pre><code class="ruby">class Computer
  def initialize(computer_id, data_source)
    @id = computer_id
    @data_source = data_source
  end
  def self.define_component(name)
    define_method(name) {
      info = @data_source.send "get_#{name}_info", @id
      price = @data_source.send "get_#{name}_price", @id
      result = "#{name.to_s.capitalize}: #{info} ($#{price})"
      return "* #{result}" if price &gt;= 100
      result
    }
  end
  define_component :mouse
  define_component :cpu
  define_component :keyboard
end
</code></pre>

<p>使用 <code>define_method</code> 方法，来在运行时动态地定义方法，也称<strong> 动态方法 （Dynamic Method）</strong>。</p>

<h3>3. 内省代码的使用</h3>

<pre><code class="ruby">class Computer
  def initialize(computer_id, data_source)
    @id = computer_id
    @data_source = data_source
    data_source.methods.grep(/^get_(.*)_info$/) { Computer.define_component $1 }
  end

  def self.define_component(name)
    define_method(name) {
      info = @data_source.send "get_#{name}_info", @id
      price = @data_source.send "get_#{name}_price", @id
      result = "#{name.capitalize}: #{info} ($#{price})"
      return "* #{result}" if price &gt;= 100
      result
    }
  end
end
</code></pre>

<p>这里通过使用正则表达式，来进一步简化方法的定义。使用 <code>grep</code>，当满足之后的正则表达式，则会定义相应的方法。</p>

<h3>4.method_missing 的使用</h3>

<pre><code class="ruby">class Computer
  def initialize(computer_id, data_source)
    @id = computer_id
    @data_source = data_source
  end
  def method_missing(name, *args)
    super if !@data_source.respond_to?("get_#{name}_info")
    info = @data_source.send("get_#{name}_info", args[0])
    price = @data_source.send("get_#{name}_price", args[0])
    result = "#{name.to_s.capitalize}: #{info} ($#{price})"
    return " * #{result}" if price &gt;= 100
    result
  end

end
</code></pre>

<p><code>method_missing</code> 方法又称 ghost 方法（幽灵方法），是指在方法的调用过程中，若是在其类型中及其祖先链上找不到相应的方法，则会在实例上调用 <code>method_missing</code> 方法（其属于 Kernel 的一个实例方法，而所有的对象都继承自 kernel 模块）。这里通过重写 <code>method_missing</code> 方法，来达到对 <code>data_source</code> 中相应的方法的动态调用。</p>

<h2>参考资料</h2>

<p><a href="http://media.pragprog.com/titles/ppmetr/methods.pdf">Metaprogramming Ruby</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress搭建博客之路1]]></title>
    <link href="http://alighters.github.io/blog/blog/2016/04/23/octopressda-jian-bo-ke-zhi-lu-1/"/>
    <updated>2016-04-23T22:00:00+08:00</updated>
    <id>http://alighters.github.io/blog/blog/2016/04/23/octopressda-jian-bo-ke-zhi-lu-1</id>
    <content type="html"><![CDATA[<p>最近，因之前的博客是通过hexo搭建的，而通过hexo搭建的样式，有点烂大街的赶脚。另外，想对它做一些改动，看着它的代码有点头大。然后，就接触了Octopress，稍微了解了一下，就决定把我的博客迁到这个上面了。原因有二：1.是基于Ruby开发的，正是我目前在学的语言；2.相对于hexo提供更多的功能。废话不多说，开始搭建第一篇Octopress博客吧。</p>

<!-- more -->


<h2>配置Octopress</h2>

<ul>
<li><p>准备工具
我们需要git、ruby > 1.9.3、bundler</p></li>
<li><p>项目clone</p></li>
</ul>


<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="nb">clone</span> <span class="ss">git</span><span class="p">:</span><span class="sr">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">imathis</span><span class="o">/</span><span class="n">octopress</span><span class="o">.</span><span class="n">git</span> <span class="n">blog</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>在此把blog设置为我们的写博客的目录。</p>

<blockquote><p>Tips：建议fork这个github的地址，建立一个个人的配置，这样就可以对网站的样式进行个人配置的保存工作。</p></blockquote>

<ul>
<li>安装依赖</li>
</ul>


<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure></p>

<ul>
<li>配置主题</li>
</ul>


<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>这里会安装Octopress提供的默认主题。</p>

<ul>
<li>错误解决
在执行主题配置，执行<code>rake</code>的时候，会报下面的错误。具体原因，是因为rake版本不匹配，笔者安装的rake版本过多的问题。</li>
</ul>


<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="n">aborted!</span>
</span><span class='line'><span class="no">Gem</span><span class="o">::</span><span class="ss">LoadError</span><span class="p">:</span> <span class="no">You</span> <span class="n">have</span> <span class="n">already</span> <span class="n">activated</span> <span class="n">rake</span> <span class="mi">11</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">2</span><span class="p">,</span> <span class="n">but</span> <span class="n">your</span> <span class="no">Gemfile</span> <span class="n">requires</span> <span class="n">rake</span> <span class="mi">10</span><span class="o">.</span><span class="mi">5</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span> <span class="no">Prepending</span> <span class="o">&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">bundle</span> <span class="nb">exec</span><span class="o">&lt;</span><span class="sr">/code&gt; to your command may solve this.</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>按照提示的解决方案，添加<code>bundle exec</code>就可以解决，那每次这样输入，不是太麻烦了么。还有另一个解决方案，移除10.5.0的rake版本，在命令行下，执行命令如下：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">uninstall</span> <span class="n">rake</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>系统会列出所有的rake版本，选择相应版本即可。</p>

<h2>创建blog</h2>

<ul>
<li>创建blog
Octopress的命令，都是通过rake来执行的，接下来，咱们来看一下Octopress提供了哪些功能？执行<code>rake -T</code>，来查看所有的任务命令，可以看到有如下的输出：
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="n">clean</span>                     <span class="c1"># Clean out caches: .pygments-cache, .gist-cache, .sass-cache</span>
</span><span class='line'><span class="n">rake</span> <span class="n">copydot</span><span class="o">[</span><span class="n">source</span><span class="p">,</span><span class="n">dest</span><span class="o">]</span>      <span class="c1"># copy dot files for deployment</span>
</span><span class='line'><span class="n">rake</span> <span class="n">deploy</span>                    <span class="c1"># Default deploy task</span>
</span><span class='line'><span class="n">rake</span> <span class="n">gen_deploy</span>                <span class="c1"># Generate website and deploy</span>
</span><span class='line'><span class="n">rake</span> <span class="n">generate</span>                  <span class="c1"># Generate jekyll site</span>
</span><span class='line'><span class="n">rake</span> <span class="n">install</span><span class="o">[</span><span class="n">theme</span><span class="o">]</span>            <span class="c1"># Initial setup for Octopress: copies the default theme into the &amp;hellip;</span>
</span><span class='line'><span class="n">rake</span> <span class="n">integrate</span>                 <span class="c1"># Move all stashed posts back into the posts directory, ready for&amp;hellip;</span>
</span><span class='line'><span class="n">rake</span> <span class="n">isolate</span><span class="o">[</span><span class="n">filename</span><span class="o">]</span>         <span class="c1"># Move all other posts than the one currently being worked on to &amp;hellip;</span>
</span><span class='line'><span class="n">rake</span> <span class="n">list</span>                      <span class="c1"># list tasks</span>
</span><span class='line'><span class="n">rake</span> <span class="n">new_page</span><span class="o">[</span><span class="n">filename</span><span class="o">]</span>        <span class="c1"># Create a new page in source/(filename)/index.markdown</span>
</span><span class='line'><span class="n">rake</span> <span class="n">new_post</span><span class="o">[</span><span class="n">title</span><span class="o">]</span>           <span class="c1"># Begin a new post in source/&lt;em&gt;posts</span>
</span><span class='line'><span class="n">rake</span> <span class="n">preview</span>                   <span class="c1"># preview the site in a web browser</span>
</span><span class='line'><span class="n">rake</span> <span class="n">push</span>                      <span class="c1"># deploy public directory to github pages</span>
</span><span class='line'><span class="n">rake</span> <span class="n">rsync</span>                     <span class="c1"># Deploy website via rsync</span>
</span><span class='line'><span class="n">rake</span> <span class="n">set_root_dir</span><span class="o">[</span><span class="n">dir</span><span class="o">]</span>         <span class="c1"># Update configurations to support publishing to root or sub dire&amp;hellip;</span>
</span><span class='line'><span class="n">rake</span> <span class="n">setup_github_pages</span><span class="o">[</span><span class="n">repo</span><span class="o">]</span>  <span class="c1"># Set up &lt;/em&gt;deploy folder and deploy branch for Github Pages deploy&amp;hellip;</span>
</span><span class='line'><span class="n">rake</span> <span class="n">update_source</span><span class="o">[</span><span class="n">theme</span><span class="o">]</span>      <span class="c1"># Move source to source.old, install source theme updates, replac&amp;hellip;</span>
</span><span class='line'><span class="n">rake</span> <span class="n">update_style</span><span class="o">[</span><span class="n">theme</span><span class="o">]</span>       <span class="c1"># Move sass to sass.old, install sass theme updates, replace sass&amp;hellip;</span>
</span><span class='line'><span class="n">rake</span> <span class="n">watch</span>                     <span class="c1"># Watch the site and regenerate when it changes</span>
</span></code></pre></td></tr></table></div></figure>
从中，可以看到我们将会用到的几个常用命令<code>deploy</code>来执行网站的部署，<code>new_page</code>来创建页面，<code>new_post</code>来创建新的博客。</li>
<li>新建第一篇博客
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="n">new_post</span><span class="o">[&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">first</span> <span class="n">blog</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>
执行完之后，就会得到如下的系统输出：
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">mkdir</span> <span class="o">-</span><span class="nb">p</span> <span class="n">source</span><span class="o">/&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">posts</span>
</span><span class='line'><span class="no">Creating</span> <span class="kp">new</span> <span class="ss">post</span><span class="p">:</span> <span class="n">source</span><span class="o">/&lt;</span><span class="sr">/em&gt;posts/</span><span class="mi">2016</span><span class="o">-</span><span class="mo">04</span><span class="o">-</span><span class="mi">23</span><span class="o">-</span><span class="n">first</span><span class="o">-</span><span class="n">blog</span><span class="o">.</span><span class="n">markdown</span><span class="o">&lt;</span><span class="sr">/li&gt;</span>
</span><span class='line'><span class="sr">&lt;/u</span><span class="n">l</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>
+ 预览页面
这里使用<code>preview</code>命令</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="n">preview</span>
</span></code></pre></td></tr></table></div></figure>
之后，会看到提供给的提示是端口4000，在浏览器中输入：<code>localhost: 4000</code>，则可以看到我们的first blog了。如图：</p>

<p><img src="http://alighters.github.io/files/imgs/first_blog.png" alt="First blog.png" /></p>

<ul>
<li>错误解决
在执行新建博客的时候，会遇到rake new_post不识别的问题。这个在官方文档中，提到是由我的命令行工具使用了<code>zsh</code>的缘故。解决方案，打开<code>zsh</code>的配置文件<code>.zshrc</code>。在其中，添加如下代码：</li>
</ul>


<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">alias</span> <span class="n">rake</span><span class="o">=&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">noglob</span> <span class="n">rake</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2>网站配置</h2>

<p>这里<code>Octopress</code>主要的配置文件，是由根目录下面的<code>_config.yml</code>文件，来进行配置的。主要代码如下，可以看到看到其支持的功能非常丰富：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Main</span> <span class="no">Configs</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="ss">url</span><span class="p">:</span> <span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;http://alighters.com&quot;</span><span class="o">&gt;</span><span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="n">alighters</span><span class="o">.</span><span class="n">com</span><span class="o">&lt;</span><span class="sr">/a&gt;</span>
</span><span class='line'><span class="sr">title: My Octopress Blog</span>
</span><span class='line'><span class="sr">subtitle: A blogging framework for hackers.</span>
</span><span class='line'><span class="sr">author: Your Name</span>
</span><span class='line'><span class="sr">simple_search: &lt;a href=&quot;https:/</span><span class="o">/</span><span class="n">www</span><span class="o">.</span><span class="n">google</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">search</span><span class="s2">&quot;&gt;https://www.google.com/search&lt;/a&gt;</span>
</span><span class='line'><span class="s2">description:&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;h1&gt;Default date format is &amp;ldquo;ordinal&amp;rdquo; (resulting in &amp;ldquo;July 22nd 2007&amp;rdquo;)&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;h1&gt;You can customize the format as defined in&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;h1&gt;&lt;a href=&quot;</span><span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="n">www</span><span class="o">.</span><span class="n">ruby</span><span class="o">-</span><span class="n">doc</span><span class="o">.</span><span class="n">org</span><span class="o">/</span><span class="n">core</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">/</span><span class="no">Time</span><span class="o">.</span><span class="n">html</span><span class="c1">#method-i-strftime&quot;&gt;http://www.ruby-doc.org/core-1.9.2/Time.html#method-i-strftime&lt;/a&gt;&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Additionally</span><span class="p">,</span> <span class="o">%</span><span class="n">o</span> <span class="n">will</span> <span class="n">give</span> <span class="n">you</span> <span class="n">the</span> <span class="n">ordinal</span> <span class="n">representation</span> <span class="n">of</span> <span class="n">the</span> <span class="n">day</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;date_format: &amp;ldquo;ordinal&amp;rdquo;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">RSS</span> <span class="o">/</span> <span class="no">Email</span> <span class="p">(</span><span class="n">optional</span><span class="p">)</span> <span class="n">subscription</span> <span class="n">links</span> <span class="p">(</span><span class="n">change</span> <span class="k">if</span> <span class="n">using</span> <span class="n">something</span> <span class="n">like</span> <span class="no">Feedburner</span><span class="p">)</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;subscribe_rss: /</span><span class="n">atom</span><span class="o">.</span><span class="n">xml</span>
</span><span class='line'><span class="ss">subscribe_email</span><span class="p">:</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;RSS feeds can list your email address if you like&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="ss">email</span><span class="p">:</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Jekyll</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="no">Plugins</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">If</span> <span class="n">publishing</span> <span class="n">to</span> <span class="n">a</span> <span class="n">subdirectory</span> <span class="n">as</span> <span class="k">in</span> <span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;http://site.com/project&quot;</span><span class="o">&gt;</span><span class="ss">http</span><span class="p">:</span><span class="sr">//si</span><span class="n">te</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">project</span><span class="o">&lt;</span><span class="sr">/a&gt; set &amp;lsquo;root: /</span><span class="n">project</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;root: /</span>
</span><span class='line'><span class="ss">permalink</span><span class="p">:</span> <span class="sr">/blog/</span><span class="ss">:year</span><span class="o">/</span><span class="ss">:month</span><span class="o">/</span><span class="ss">:day</span><span class="o">/</span><span class="ss">:title</span><span class="o">/</span>
</span><span class='line'><span class="ss">source</span><span class="p">:</span> <span class="n">source</span>
</span><span class='line'><span class="ss">destination</span><span class="p">:</span> <span class="kp">public</span>
</span><span class='line'><span class="ss">plugins</span><span class="p">:</span> <span class="n">plugins</span>
</span><span class='line'><span class="ss">code_dir</span><span class="p">:</span> <span class="n">downloads</span><span class="o">/</span><span class="n">code</span>
</span><span class='line'><span class="ss">category_dir</span><span class="p">:</span> <span class="n">blog</span><span class="o">/</span><span class="n">categories</span>
</span><span class='line'><span class="ss">markdown</span><span class="p">:</span> <span class="n">rdiscount</span>
</span><span class='line'><span class="ss">rdiscount</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">extensions</span><span class="p">:</span>
</span><span class='line'>    <span class="o">-</span> <span class="n">autolink</span>
</span><span class='line'>    <span class="o">-</span> <span class="n">footnotes</span>
</span><span class='line'>    <span class="o">-</span> <span class="n">smart</span>
</span><span class='line'><span class="ss">highlighter</span><span class="p">:</span> <span class="n">pygments</span> <span class="c1"># default python pygments have been replaced by pygments.rb&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="ss">paginate</span><span class="p">:</span> <span class="mi">10</span>          <span class="c1"># Posts per page on the blog index</span>
</span><span class='line'><span class="ss">paginate_path</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">posts</span><span class="o">/</span><span class="ss">:num</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>  <span class="c1"># Directory base for pagination URLs eg. /posts/2/</span>
</span><span class='line'><span class="ss">recent_posts</span><span class="p">:</span> <span class="mi">5</span>       <span class="c1"># Posts in the sidebar Recent Posts section</span>
</span><span class='line'><span class="ss">excerpt_link</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">Read</span> <span class="n">on</span> <span class="err">→</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>  <span class="c1"># &amp;ldquo;Continue reading&amp;rdquo; link text at the bottom of excerpted articles</span>
</span><span class='line'><span class="ss">excerpt_separator</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;!--</span><span class="n">more</span><span class="o">--&gt;&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;titlecase: true       # Converts page and post titles to titlecase&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">list</span> <span class="n">each</span> <span class="n">of</span> <span class="n">the</span> <span class="n">sidebar</span> <span class="n">modules</span> <span class="n">you</span> <span class="n">want</span> <span class="n">to</span> <span class="kp">include</span><span class="p">,</span> <span class="k">in</span> <span class="n">the</span> <span class="n">order</span> <span class="n">you</span> <span class="n">want</span> <span class="n">them</span> <span class="n">to</span> <span class="n">appear</span><span class="o">.</span><span class="n">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;To add custom asides, create files in /sou</span><span class="n">rce</span><span class="o">/</span><span class="n">_includes</span><span class="o">/</span><span class="n">custom</span><span class="o">/</span><span class="n">asides</span><span class="o">/</span> <span class="ow">and</span> <span class="n">add</span> <span class="n">them</span> <span class="n">to</span> <span class="n">the</span> <span class="n">list</span> <span class="n">like</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">custom</span><span class="o">/</span><span class="n">asides</span><span class="o">/</span><span class="n">custom_aside_name</span><span class="o">.</span><span class="n">html</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;default_asides: [asides/</span><span class="n">recent_posts</span><span class="o">.</span><span class="n">html</span><span class="p">,</span> <span class="n">asides</span><span class="o">/</span><span class="n">github</span><span class="o">.</span><span class="n">html</span><span class="p">,</span> <span class="n">asides</span><span class="o">/</span><span class="n">delicious</span><span class="o">.</span><span class="n">html</span><span class="p">,</span> <span class="n">asides</span><span class="o">/</span><span class="n">pinboard</span><span class="o">.</span><span class="n">html</span><span class="p">,</span> <span class="n">asides</span><span class="o">/</span><span class="n">googleplus</span><span class="o">.</span><span class="n">html</span><span class="o">]&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Each layout uses the default asides, but they can have their own asides instead. Simply uncomment the lines below&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="ow">and</span> <span class="n">add</span> <span class="n">an</span> <span class="n">array</span> <span class="n">with</span> <span class="n">the</span> <span class="n">asides</span> <span class="n">you</span> <span class="n">want</span> <span class="n">to</span> <span class="n">use</span><span class="o">.</span><span class="n">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;blog_index_asides:&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="ss">post_asides</span><span class="p">:</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;page_asides:&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;3rd Party Settings&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Github repositories&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="ss">github_user</span><span class="p">:</span>
</span><span class='line'><span class="ss">github_repo_count</span><span class="p">:</span> <span class="mi">0</span>
</span><span class='line'><span class="ss">github_show_profile_link</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="ss">github_skip_forks</span><span class="p">:</span> <span class="kp">true</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Twitter&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="ss">twitter_user</span><span class="p">:</span>
</span><span class='line'><span class="ss">twitter_tweet_button</span><span class="p">:</span> <span class="kp">true</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Google +1&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="ss">google_plus_one</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="ss">google_plus_one_size</span><span class="p">:</span> <span class="n">medium</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Google Plus Profile&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="ss">Hidden</span><span class="p">:</span> <span class="no">No</span> <span class="n">visible</span> <span class="n">button</span><span class="p">,</span> <span class="n">just</span> <span class="n">add</span> <span class="n">author</span> <span class="n">information</span> <span class="n">to</span> <span class="n">search</span> <span class="n">results</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;googleplus_user:</span>
</span><span class='line'><span class="sr">googleplus_hidden: false&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Pinboard</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;pinboard_user:</span>
</span><span class='line'><span class="sr">pinboard_count: 3&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Delicious</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;delicious_user:</span>
</span><span class='line'><span class="sr">delicious_count: 3&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Disqus</span> <span class="no">Comments</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;disqus_short_name:</span>
</span><span class='line'><span class="sr">disqus_show_comment_count: false&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Google</span> <span class="no">Analytics</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;google_analytics_tracking_id:&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Facebook</span> <span class="no">Like</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;facebook_like: false&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>
这里，笔者稍微简单修改之后的界面，来看看效果如何：</p>

<p><img src="http://alighters.github.io/files/imgs/blog_view.png" alt="效果.png" />
有木有感觉异常简单呢？</p>

<h2>参考资料</h2>

<ul>
<li><a href="http://webdesign.tutsplus.com/tutorials/getting-started-with-octopress--webdesign-11442">Getting Started with Octopress</a></li>
<li><a href="http://octopress.org/docs/setup/">Octopress Setup</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails的部署实践总结]]></title>
    <link href="http://alighters.github.io/blog/blog/2016/03/20/rails-deploy-summary/"/>
    <updated>2016-03-20T23:05:55+00:00</updated>
    <id>http://alighters.github.io/blog/blog/2016/03/20/rails-deploy-summary</id>
    <content type="html"><![CDATA[<p>最近刚刚实践了一把Rails的自动部署，由于自己对这个一知半解，期间遇到了不少实践性的问题以及概念性的问题，在这里把这些问题都记录下来，以防以后再遇到。文中主要参照<a href="http://www.jianshu.com/p/3417c69a824a">capstrano半自动部署rails程序</a>这篇文章，来按步骤部署。</p>

<!-- more -->


<h3>先说一下capstrano能帮我们做什么？</h3>

<p>在我们使用rails建一个简单的服务器的时候，最后我们需要也同样把它建立在我们自己的服务器上去。capstrano就是这样的场景产生的，最终我们只需在我们的应用程序的主目录下，直接调用<code>cap production deploy</code>（production指的是我们的开发环境）就可直接在服务器上看到我们更改之后的运行程序了，当然在这之前，是需要我们在rails中，进行一些必要的配置的。</p>

<h3>主要问题记录</h3>

<ul>
<li><p>配置cap的远程连接
在cap中的部署过程中，它需要读取我们的git远程仓库所在的地址，然后将其部署编译到我们在服务器中所指定的位置。若是配置了nginx，则也会在nginx的配置中，添加代理我们的应用程序的配置。
这里，有几个细节问题需要注意一下，
1） git仓库ssh key的添加。例如，我们若是设置了github作为我们应用程序的仓库，则需要在github添加服务器所对应ssh key，这样来保证我们服务器能获取到github仓库中最新的代码。</p>

<p>2）cap配置远程的ssh。我使用的是亚马逊的aws，它的ssh不是通过用户名跟密码来连接的，这个让我愣怔了半天，一直在找我的用户名跟密码。但是最后在配置中看到一个key的设置，才想到直接使用它提供的.pem文件，是不是可以，竟然就成功了，颇感神奇。主要的代码配置如下，这样就不用填用户名跟密码了。
```</p>

<h1>The server-based syntax can be used to override options:</h1>

<h1>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</h1>

<p>server &lsquo;ec2-52-193-240-0.ap-northeast-1.compute.amazonaws.com&rsquo;,
 user: &lsquo;ubuntu&rsquo;,
 roles: %w{web app db},
 ssh_options: {
   #user: &lsquo;<strong><strong>&rsquo;, # overrides user setting above
   keys: %w(~/.ssh/david.pem),
   forward_agent: false,
   auth_methods: %w(publickey password),
   #password: &lsquo;</strong></strong>&rsquo;
 }
<code>``
PS: 这里使用的</code>.pem`文件是aws提供的私钥文件，用来进行ssh的连接。</p></li>
<li><p>nginx的使用
先得弄明白nginx的主要作用，来提供我们的服务的代理，进行我们的应用服务程序的跳转过滤以及代理配置。这里，举个最肤浅的例子，我们的rails程序启动之后往往都是默认3000端口，但是我们通过nginx，只对外暴露一个80端口，同时隐藏了我们的应用名称，只需配置相应的路由规则，让其访问我们本地的3000端口，但在用户看来只有80端口，很神奇的有木有。
这里，注意的是nginx一般对我们的静态文件做缓存的全局代理，另外，访问我们的动态程序，需要在nginx的配置中，在server节点添加我们的应用程序对应规则，我们这里直接修改<code>proxy_pass</code>这个节点，指向我们的地址就好。
<code>
proxy_pass http://localhost:3000;
</code>
接下来，就是需要启动我们本地服务的3000端口了。</p></li>
<li><p>rails服务的启动
这里之前一直以为执行<code>cap deploy</code>之后，我们的服务器程序也就自动启动了。可是那我的端口是多少，它是怎么设置的。最后发现还是我太天真了，这里还是要自己启动的。跳转至我们的服务器程序<code>/var/www/app/current</code>目录下，通过执行<code>bundle exec rails s -e production</code>，来启动我们的程序。看我们的rails程序是否处于启动的状态，可通过进程查看的方式来确定，执行命令<code>ps -ef | grep rails</code>来找到是否有相应的进程。</p></li>
</ul>


<h3>常用的命令</h3>

<ul>
<li>执行nginx的重启操作</li>
</ul>


<pre><code>sudo service nginx restart
</code></pre>

<ul>
<li><p>nginx的信息 <code>nginx -V</code> 可以看到nginx的访问日志以及错误日志的目录</p></li>
<li><p>nginx维护的设置目录：<code>/etc/nginx/sites-enabled/</code></p></li>
<li><p>查看nginx的进程： <code>ps -ef | grep nginx</code></p></li>
<li><p>服务器上rails的执行： <code>bundle exec rails s -e production</code></p></li>
<li><p>使Rails server在后台运行的命令screen， 通过screen命令可以避免我们的ssh连接断开时，保证我们启动的服务还在运行。常用的screen命令如下：</p></li>
</ul>


<pre><code>screen + 命令 //会立即创建并进入一个会话。
screen -dmS {name} //建立一个处于断开模式下的会话，并根据我们的需要指定其会话名称。
screen -list //列出所有会话。
screen -r {name} //进入指定会话。
ctrl +ad //输入快捷键ctrl +a和d，可暂时退出当前会话。
exit //进入指定会话后执行exit即可关闭该会话。
</code></pre>

<p>最后，我们的程序已经完整的在服务器上跑起来了，过程还是颇多周折。期间，又加深了对linux命令的熟悉同时深入了解之前只知其名的程序，还是感觉代码这种要多动手啊。最后最后，欢迎对我这个菜鸟拍砖。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一键收藏至Github]]></title>
    <link href="http://alighters.github.io/blog/blog/2016/02/29/one-click-collecto-to-github/"/>
    <updated>2016-02-29T22:33:04+00:00</updated>
    <id>http://alighters.github.io/blog/blog/2016/02/29/one-click-collecto-to-github</id>
    <content type="html"><![CDATA[<p>因本人比较喜欢对一些技术文章进行收藏，并进行整理。像Pocket、Evernote这些工具都可以进行离线收藏，都是很不错的工具，但我就想把这些喜欢的文章，进行收藏整理至github，并且一键提交（顺便还可以刷刷Github的活跃度），同时省了自己的时间，只需要在固定的时间，对这些进行整理即可。</p>

<!-- more -->


<h3>简单需求</h3>

<p>  首先，简单得说一下自己的需求，根据每天的阅读文章通过每天归类显示，并按照每月来生成文章，具体的文章输出结果显示如<a href="http://www.jianshu.com/p/7f5295eed909">2016.01阅读文章</a>。</p>

<h3>技术搭建</h3>

<p>  这里主要的技术主要两个难点：</p>

<ul>
<li><p>一键点击插件的生成</p></li>
<li><p>脚本编写生成对应的markdown</p></li>
</ul>


<h3>技术实现</h3>

<ol>
<li>JS来获取当前文章的标题以及链接
这里参照百度首页链接的添加，通过JS先获取到document以及location对象，然后通过它俩来拿到当前窗口的链接以及标题，然后调用本地服务的一个请求，传递给本地服务，来进行当前网址的记录。主要的代码如下：</li>
</ol>


<pre><code class="javascript">javascript: ((function(s, d, e) {
    var u = location;
    var f = 'http://localhost:3000/create?link=' + e(u.href) + '&amp;title=' + e(d.title) + '&amp;_t=' + new Date().getTime();
    function a() {
        if (!window.open(f, '', 'toolbar=0,status=0,resizable=1,width=700,height=450,left=' + (s.width - 700) / 2 + ',top=' + (s.height - 650) / 2)) u.href = f
    };
    if (/Firefox/.test(navigator.userAgent)) setTimeout(a, 0);
    else a()
})(screen, document, encodeURIComponent));
</code></pre>

<p>从上述的代码可以看到，最主要的代码就是通过window对象来打开一个新的窗口，指定窗口就是咱们本地的一个API请求，链接格式为<a href="http://localhost:3000/create,">http://localhost:3000/create,</a> 以及两个参数link和title，对应咱们生成markdown的内容。</p>

<blockquote><p>这里如何使用呢？在app/views/welcome/index.html.erb中，将上述的Js代码放置在一个a标签中，将代码作为链接href属性的值。启动rails的服务器，输入<a href="http://localhost:3000/index">http://localhost:3000/index</a> 就会显示这个相对应的url，我们将其拖拽至我们的书签栏，则就会使用我们的插件工具了。
2. 搭建获取链接的API
  这里主要使用Ruby on Rails来搭建一个本地的服务器，毕竟是号称10分钟创建一个完整的Web应用程序的语言。
  对应的主要代码目录在app/controllers/article_controller.rb文件中，通过api请求<em><a href="http://localhost:3000/create?link=">http://localhost:3000/create?link=</a>{0}&amp;title&amp;{1}</em> 来获取需要保存的链接，主要代码如下：</p></blockquote>

<pre><code class="ruby">class ArticleController &lt; ApplicationController

  def create
    title = params[:title]
    link = params[:link]
    data = []
    file_name = Rails.root.to_s + '/README.md'
    status = 'ok'
    if title.nil? or link.nil?
      status = 'error'
    else
      if(Date.today.mday == 1)
        new_file_name = "#{Rails.root.to_s}/#{Date.today.prev_day.strftime('%Y-%m').to_s}.md"
        File.rename(file_name, new_file_name)
        File.new(file_name, 'w+')
      end
      data = DataHelper.append_to(file_name, title, link)
      if !data.nil?
        DataHelper.write_to(file_name, data)
      end
    end
    GitHelper.commit(title)
    render json: {'status' =&gt; status, 'data' =&gt; data}
  end
end
</code></pre>

<p>上述代码中，主要的逻辑有三处：
+ 判断当天是否为当月的第一天，若是的话，则需要重命名README.md文件为上个月的文件，形如‘2016-01.md'格式的文件。主要的目的是将咱们的文章按每个月份来分类。
+ 通过DataHelper类来添加链接及其对应的标题，可以看到主要通过DataHelper的append_to和write_to方法来实现链接标题的添加。代码如下：</p>

<pre><code class="ruby">module DataHelper

  # 根据文件获取添入标题和链接之后的最新文本内容
  def self.append_to(file_name, title, link)
    data = []
    changed = false
    inserted = false

    File.open(file_name).each do |line|
      if !inserted and line.start_with?('###') 
        # 当前行为具体的日期
        date_str = line.slice(3, 3 + 10).squish
        if(is_date(date_str))
          # 当前日期为今天，则在当前天下添加新的一行数据
          if(Date.parse(date_str) == Date.today)
            data.push line
            data.push "+ [#{title}](#{link})&lt;br&gt;\n"
            changed = true
            inserted = true
          # 当前日期小于今天，则新建今天的数据
          elsif(Date.parse(date_str) &lt; Date.today)
            data.push "### #{Date.today}&lt;br&gt;\n"
            data.push "+ [#{title}](#{link})&lt;br&gt;\n"
            data.push "\r\n"
            inserted = true
          end
        end
      end
      if !changed
        data.push line
      end
      changed = false
    end
    # 若没有添加，则表示是个新建的文件，直接添加今天的数据
    if(!inserted)
       data.push "### #{Date.today}&lt;br&gt;\n"
       data.push "+ [#{title}](#{link})&lt;br&gt;\n"
       data.push "\r\n"
    end
    data
  end

  # 向文件中写入data
  def self.write_to(file_name, data)
    file = File.new(file_name, 'w+')
    data.each do |line|
      file.write line
    end
    file.close
  end

  # 判断字符是否为一个日期
  def self.is_date(str)
    result = false
    begin
      Date.parse(str)
      result = true
    rescue ArgumentError
      result = false
    end
    result
  end

end
</code></pre>

<p>在Datahelper的append_to方法中，是通过逐行读取文件，根据文件对应的日期标题，获取到相应的日期，判断当前日期是否大于获取的日期，大于的时候则可直接添加，等于的时候则可在日期下面的第一行中插入，最后我们获取的将是一个data的数组。另外，使用write_to将data中的数据，逐行写入文件中。</p>

<ul>
<li>Git的自动提交，这里实现的主要的代码在GitHelper中，其中的代码呈上：</li>
</ul>


<pre><code class="ruby">module GitHelper

  def self.commit(title)
    t = fork do
      Signal.trap("HUP") {
        system 'git status'
        system 'git add .'
        system "git commit -am 'add #{title}'"
        system 'git pull --rebase'
        system 'git push'
      }
    end
    Process.kill("HUP", t) 
  end
end
</code></pre>

<p>我们知道Git提交是件耗时的操作，所以为了提高API的响应速度，这里通过使用异步来提交Git请求，可以看到使用rebase来提交请求，所以出现冲突的时候，我们得自己手动解决了。</p>

<h3>使用</h3>

<ul>
<li>打开项目所在的目录，使用<strong> rails s</strong>来启动服务</li>
<li>在浏览器中输入 <a href="http://localhost:3000/index">http://localhost:3000/index</a> 来显示我们需要的书签链接，如图所示；</li>
</ul>


<p><img src="http://alighters.github.io/files/imgs/%E4%B9%A6%E7%AD%BE%E9%93%BE%E6%8E%A5.png" alt="书签链接.png" /></p>

<ul>
<li>将上图中的链接拖拽至chrome的书签栏中，如图：</li>
</ul>


<p><img src="http://alighters.github.io/files/imgs/%E4%B9%A6%E7%AD%BE.png" alt="书签.png" /></p>

<ul>
<li>点击<strong>fav</strong>书签，就可保存当前的页面了，并自动提交了。</li>
</ul>


<h3>总结</h3>

<p>这样，我们一个很简单的文章记录加自动提交的功能就完成了。当然还有许多功能可以做一些扩展，例如，可以支持不同的GitHub的仓库；做成chrome的插件来方便使用。最后，放上代码地址：<a href="https://github.com/david-wei/MediumArticles">代码地址</a></p>
]]></content>
  </entry>
  
</feed>
